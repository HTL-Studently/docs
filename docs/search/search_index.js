var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to Studently","text":"<p>Contracted by</p> <p>Prof. DI Harald Wolf</p> <p>Supervised by</p> <p>Prof. DI Harald Wolf</p> <p>Created by</p> <p>Panna Kunos </p> <p>Erik Simcic</p>"},{"location":"index.html#concept","title":"Concept","text":"<p>This project aims to build an application that integrates a finance management system for the in-school finances. The project members are students of the HTL Villach, and the application should be implemented to work in their school. The application should enable HTL Villach students and teachers alike to manage the finances and payments within the school. The application should include an UI where students can view upcoming and completed payments, as well as view and request licenses. The class teacher can create payment requests for the class and request licenses to their students individually or for the entire class. For higher authorities in the school, they should also be able to access the management tab, which allows for the creation of email-lists and the activation and deactivation of accounts. It also informs the school authorities of incoming payments and displays the payments of the school sorted by department and classes. Authentication, authorization and other security mechanisms should be implemented by user validation via Microsoft email.</p>"},{"location":"index.html#motivation","title":"Motivation","text":"<p>Currently, the finance management system in the HTL Villach is very disorganized. The project members want to improve the processes and workflow behind in-school payments and licenses and provide a centralized platform for viewing payments and licenses. Furthermore, it should inform students of incoming payments via email. This process gives students, teachers, and other school authorities alike a better overview and more clarity behind the payment and licensing processes and eases the maintenance of the in-school payments and licenses for school authorities. Many payment processes that are currently handled manually should be automated. </p>"},{"location":"index.html#team","title":"Team","text":"<p>Kunos Panna \u2013 Roles  - Project manager</p> <ul> <li> <p>Documentation manager</p> </li> <li> <p>Risk manager</p> </li> <li> <p>Responsible for   projects containerization</p> </li> <li>Frontend developer</li> </ul> <p>Simcic Erik \u2013 Roles: - Deputy project manager</p> <ul> <li> <p>Responsible for controlling </p> </li> <li> <p>Git manager</p> </li> <li> <p>Responsible for APIs</p> </li> <li> <p>Backend developer</p> </li> </ul>"},{"location":"index.html#big-picture","title":"Big Picture","text":""},{"location":"Developer/Contribution%20Guides/Styleguide.html","title":"Styleguide","text":""},{"location":"Developer/Contribution%20Guides/Styleguide.html#formater","title":"Formater","text":""},{"location":"Developer/Contribution%20Guides/Styleguide.html#python-black-formater","title":"Python - Black Formater","text":"<ul> <li> <p>Name: Black Formatter</p> </li> <li> <p>Id: ms-python.black-formatter</p> </li> <li> <p>Description: Formatting support for Python files using the Black formatter.</p> </li> <li> <p>Version: 2024.0.1</p> </li> <li> <p>Publisher: Microsoft</p> </li> </ul>"},{"location":"Developer/Contribution%20Guides/Styleguide.html#svelte-svelte-for-vs-code","title":"Svelte - Svelte for VS Code","text":"<ul> <li> <p>Name: Svelte for VS Code</p> </li> <li> <p>Id: svelte.svelte-vscode</p> </li> <li> <p>Description: Svelte language support for VS Code</p> </li> <li> <p>Version: 108.2.2</p> </li> <li> <p>Publisher: Svelte</p> </li> </ul>"},{"location":"Developer/Schemas/api.html","title":"Backend API Documentation","text":""},{"location":"Developer/Schemas/api.html#profile","title":"Profile","text":""},{"location":"Developer/Schemas/api.html#post-profile","title":"POST /profile","text":"<p>Get the profile of a user. Includes Students and Classheads.  </p>"},{"location":"Developer/Schemas/api.html#requires","title":"Requires:","text":"<ul> <li>access_token: str - Access Token</li> </ul> <pre><code>    {\n    \"access_token\": \"&lt;Access Token&gt;\"\n    }\n</code></pre>"},{"location":"Developer/Schemas/api.html#returns","title":"Returns","text":"<pre><code>    {\n    \"code\": 200,\n    \"message\": {\n        \"profile\": [\n        {\n            \"_id\": \"&lt;ID&gt;\",\n            \"disabled\": &lt;True/False&gt;,\n            \"identifier\": \"&lt;ID&gt;\",\n            \"username\": \"&lt;displayName&gt;\",\n            \"firstname\": \"&lt;Firstname&gt;\",\n            \"lastname\": \"&lt;Lastname&gt;\",\n            \"email\": \"&lt;mail&gt;\",\n            \"expires\": \"&lt;date&gt;\",\n            \"created\": \"&lt;date&gt;\",\n            \"sclass\": \"&lt;sclass&gt;\",\n            \"type\": \"&lt;Student/&gt;\",\n            \"owned_objects\": []\n        }\n        ]\n    }\n    }\n</code></pre>"},{"location":"Developer/Schemas/api.html#example","title":"Example","text":"<pre><code>    {\n    \"code\": 200,\n    \"message\": {\n        \"profile\": [\n        {\n            \"_id\": \"96ec350d-ea90-406b-a6c6-94463948c77d\",\n            \"disabled\": false,\n            \"identifier\": \"96ec350d-ea90-406b-a6c6-94463948c77d\",\n            \"username\": \"SIM\u0106I\u0106 Erik, 5AHITS\",\n            \"firstname\": \"Erik\",\n            \"lastname\": \"SIM\u0106I\u0106\",\n            \"email\": \"erik.simcic@edu.htl-villach.at\",\n            \"expires\": \"2025-01-24T21:19:56.159000\",\n            \"created\": \"2024-01-25T21:19:56.159000\",\n            \"sclass\": \"5AHITS\",\n            \"type\": \"Student\",\n            \"owned_objects\": []\n        }\n        ]\n    }\n    }\n</code></pre>"},{"location":"Developer/Schemas/api.html#payments","title":"Payments","text":""},{"location":"Developer/Schemas/api.html#post-payment","title":"POST /payment","text":"<p>Creates a payment object. </p>"},{"location":"Developer/Schemas/api.html#requires_1","title":"Requires:","text":"<ul> <li> <p>access_token: str - Access Token</p> </li> <li> <p>name: str</p> </li> <li> <p>author: str</p> </li> <li> <p>target: Student | SClass | list[Student|SClass]</p> </li> <li> <p>product: Any = None</p> </li> <li> <p>cost: float</p> </li> <li> <p>iban: str</p> </li> <li> <p>start_date: datetime = datetime.now</p> </li> <li> <p>due_date: datetime</p> </li> <li> <p>expires: datetime = datetime.now() + timedelta(days=365)</p> </li> </ul> <pre><code>{\n\"access_token\": \"string\",\n\"name\": \"string\",\n\"author\": \"string\",\n\"target\": {\n    \"disabled\": true,\n    \"identifier\": \"string\",\n    \"username\": \"string\",\n    \"firstname\": \"string\",\n    \"lastname\": \"string\",\n    \"email\": \"string\",\n    \"expires\": \"2025-02-19T19:18:33.693290\",\n    \"created\": \"2024-02-20T19:18:33.693295\",\n    \"sclass\": \"string\",\n    \"type\": \"student\",\n    \"owned_objects\": []\n},\n\"product\": \"string\",\n\"cost\": 0,\n\"iban\": \"string\",\n\"start_date\": \"2024-02-20T19:18:41.553Z\",\n\"due_date\": \"2024-02-20T19:18:41.553Z\",\n\"expires\": \"2025-02-19T19:18:33.702061\"\n}\n</code></pre>"},{"location":"Developer/Schemas/api.html#returns_1","title":"Returns","text":""},{"location":"Developer/Schemas/api.html#example_1","title":"Example","text":""},{"location":"Developer/Schemas/api.html#input","title":"Input","text":"<pre><code>{\n  \"access_token\": \"string\",\n  \"name\": \"string\",\n  \"author\": \"string\",\n  \"target\": {\n    \"disabled\": true,\n    \"identifier\": \"string\",\n    \"username\": \"string\",\n    \"firstname\": \"string\",\n    \"lastname\": \"string\",\n    \"email\": \"string\",\n    \"expires\": \"2025-02-19T19:18:33.693290\",\n    \"created\": \"2024-02-20T19:18:33.693295\",\n    \"sclass\": \"string\",\n    \"type\": \"student\",\n    \"owned_objects\": []\n  },\n  \"product\": \"string\",\n  \"cost\": 0,\n  \"iban\": \"string\",\n  \"start_date\": \"2024-02-20T19:18:41.553Z\",\n  \"due_date\": \"2024-02-20T19:18:41.553Z\",\n  \"expires\": \"2025-02-19T19:18:33.702061\"\n}\n</code></pre>"},{"location":"Developer/Schemas/api.html#return-200","title":"Return - 200","text":""},{"location":"Developer/Schemas/api.html#put-payment","title":"PUT /payment","text":""},{"location":"Developer/Schemas/api.html#requires_2","title":"Requires:","text":"<p>-access_token</p> <p>-disabled</p> <p>-name</p> <p>-author</p> <p>-target_type</p> <p>-target</p> <p>-product</p> <p>-confirmation</p> <p>-payed</p> <p>-cost</p> <p>-iban</p> <p>-bic</p> <p>-start_date</p> <p>-due_date</p> <p>-expires</p> <p>-id</p> <pre><code>{\n  \"access_token\": \"string\",\n  \"disabled\": false,\n  \"name\": \"string\",\n  \"author\": \"string\",\n  \"target_type\": \"string\",\n  \"target\": \"string\",\n  \"product\": \"string\",\n  \"confirmation\": \"string\",\n  \"payed\": false,\n  \"cost\": 0,\n  \"iban\": \"string\",\n  \"bic\": \"string\",\n  \"start_date\": \"2024-02-23T09:48:22.763Z\",\n  \"due_date\": \"2024-02-23T09:48:22.763Z\",\n  \"expires\": \"2025-02-22T09:25:26.608477\",\n  \"id\": \"string\"\n}\n</code></pre>"},{"location":"Developer/Schemas/api.html#get-payment","title":"GET /payment","text":""},{"location":"Developer/Schemas/api.html#requires_3","title":"Requires:","text":"<ul> <li>access_token: str - Access Token</li> </ul> <pre><code>{\n  \"access_token\": \"string\"\n}\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html","title":"DB Schemas","text":"<p>This page shows how various objects and data is saved in the database.</p> <pre><code>DO NOT use these schemas in the body of API requests\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html#student","title":"Student","text":"<p>Used to hold a student user in the StudentDB</p>"},{"location":"Developer/Schemas/db_schemas.html#student-class","title":"Student Class","text":"<pre><code>class Student(BaseModel):\n    disabled: bool = True\n    identifier: str\n    username: str\n    firstname: str\n    lastname: str\n    email: str\n    expires: datetime = datetime.now() + timedelta(days=365)\n    created: datetime = datetime.now()\n    sclass: str\n    type: str = \"student\"\n    owned_objects: list = []\n\n    def return_dict(self):\n        return {\n            \"disabled\": str(self.disabled),\n            \"identifier\": str(self.identifier),\n            \"username\": str(self.username),\n            \"firstname\": str(self.firstname),\n            \"lastname\": str(self.lastname),\n            \"email\": str(self.email),\n            \"expires\": str(self.expires),\n            \"created\": str(self.created),\n            \"sclass\": str(self.sclass),\n            \"type\": str(self.type),\n            \"owned_objects\": str(self.owned_objects),\n        }\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html#student-example","title":"Student Example","text":"<pre><code>{\n    \"disabled\": False ,\n    \"identifier\": \"96ec350d-ea90-406b-a6c6-94463948c77d\",\n    \"username\": \"SIM\u0106I\u0106 Erik, 5AHITS\",\n    \"firstname\": \"Erik\",\n    \"lastname\": \"SIM\u0106I\u0106\",\n    \"email\": \"erik.simcic@edu.htl-villach.at\",\n    \"expires\": datetime.datetime(2025, 1, 24, 21, 19, 56, 159000),\"created\": datetime.datetime(2024, 1, 25, 21, 19, 56, 159000),\n    \"sclass\": \"5AHITS\",\n    \"type\": \"Student\",\n    \"owned_objects\": [],\n}\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html#sclass","title":"SClass","text":""},{"location":"Developer/Schemas/db_schemas.html#sclass-class","title":"SClass Class","text":""},{"location":"Developer/Schemas/db_schemas.html#sclass-example","title":"SClass Example","text":""},{"location":"Developer/Schemas/db_schemas.html#classhead","title":"ClassHead","text":"<p>Used to represent a head of class. </p>"},{"location":"Developer/Schemas/db_schemas.html#classhead-class","title":"ClassHead Class","text":"<pre><code>class ClassHead(BaseModel):\n    disabled: bool = True\n    identifier: str\n    username: str\n    firstname: str\n    lastname: str\n    email: str\n    expires: datetime = datetime.now() + timedelta(days=365)\n    created: datetime = datetime.now()\n    type: str = \"ClassHead\"\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html#classhead-example","title":"ClassHead Example","text":""},{"location":"Developer/Schemas/db_schemas.html#payment","title":"Payment","text":"<p>Used to assign a payment assignment to a student.</p>"},{"location":"Developer/Schemas/db_schemas.html#payment-class","title":"Payment Class","text":"<pre><code>class Payment(BaseModel):\n    disabled: bool\n    id: str = str(uuid.uuid4())\n    name: str\n    author: str | Student | ClassHead\n    target: str | list[str] # Student ID, Class ID\n    product: Any = None\n    confirmation: str | None\n    payed: bool = False\n    cost: float\n    iban: str\n    bic: str\n    start_date: datetime = datetime.now()\n    due_date: datetime\n    expires: datetime = datetime.now() + timedelta(days=365)\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html#payment-example","title":"Payment Example","text":"<pre><code>{\n  \"access_token\": \"\",\n  \"disabled\": false,\n  \"name\": \"SupaLizenz3000\",\n  \"author\": \"string\",\n  \"target_type\": \"\",\n  \"target\": \"5AHITS\",\n  \"product\": \"SupaLizenz3000\",\n  \"confirmation\": \"string\",\n  \"payed\": false,\n  \"cost\": 0,\n  \"iban\": \"AT452070604600063657\",\n  \"bic\": \"KSPKAT2KXXX\",\n  \"start_date\": \"2024-02-22T23:37:03.486Z\",\n  \"due_date\": \"2024-02-22T23:37:03.486Z\",\n  \"expires\": \"2025-02-21T23:36:40.823700\"\n}\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html#payment-confirmation","title":"Payment Confirmation","text":"<p>Used to hold a file that confirms a payment made by a student.</p>"},{"location":"Developer/Schemas/db_schemas.html#payment-confirmation-class","title":"Payment Confirmation Class","text":"<pre><code>class PaymentConfirmation(BaseModel):\n    disabled: bool = False\n    author: str\n    expires: None | datetime = datetime.now() + timedelta(days=365)\n    created: datetime = datetime.now()\n    filedata: any\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html#payment-confirmation-example","title":"Payment Confirmation Example","text":""},{"location":"Developer/Schemas/db_schemas.html#admin","title":"Admin","text":""},{"location":"Developer/Schemas/db_schemas.html#admin-class","title":"Admin Class","text":"<pre><code>class Admin(BaseModel):\n    disabled: bool = True\n    identifier: str\n    username: str\n    firstname: str\n    lastname: str\n    email: str\n    expires: datetime = datetime.now() + timedelta(days=365)\n    created: datetime = datetime.now()\n    type: str = \"admin\"\n\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html#admin-example","title":"Admin Example","text":""},{"location":"Developer/Schemas/db_schemas.html#license","title":"License","text":""},{"location":"Developer/Schemas/db_schemas.html#license-class","title":"License Class","text":"<pre><code>class License(BaseModel):\n    disabled: bool = True\n    identifier: str\n    license_name: str \n    license_group: str\n    description: str = \"\"\n    cost: str = \"\"\n    expires: datetime = datetime.now() + timedelta(days=365)\n    created: datetime = datetime.now()\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html#license-example","title":"License Example","text":""},{"location":"Developer/Schemas/db_schemas.html#licensegroup","title":"LicenseGroup","text":""},{"location":"Developer/Schemas/db_schemas.html#licensegroup-class","title":"LicenseGroup Class","text":"<pre><code>class LicenseGroup(BaseModel):\n    disabled: bool = True\n    identifier: str\n    license_name: str \n    description: str = \"\"\n    cost: str = \"\"\n    expires: datetime = datetime.now() + timedelta(days=365)\n    created: datetime = datetime.now()\n    licenses: list = []\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html#paymentconfirmation","title":"PaymentConfirmation","text":""},{"location":"Developer/Schemas/db_schemas.html#paymentconfirmation-class","title":"PaymentConfirmation Class","text":"<pre><code>class PaymentConfirmation(BaseModel):\n    disabled: bool = False\n    identifier: str\n    author: str\n    payment: str\n    expires: None | datetime = datetime.now() + timedelta(days=365)\n    created: datetime = datetime.now()\n    file_name: str\n    filedata: Any\n</code></pre>"},{"location":"Developer/Schemas/db_schemas.html#paymentconfirmation-example","title":"PaymentConfirmation Example","text":""},{"location":"Developer/Third%20Party%20APIs/Adobe%20Developer.html","title":"Adobe Developer Console","text":""},{"location":"Developer/Third%20Party%20APIs/Adobe%20Developer.html#why-we-need-it","title":"Why we need it","text":"<p>Using the Adobe Developer API Adobe users and licenses can be viewed and managed. </p>"},{"location":"Developer/Third%20Party%20APIs/Adobe%20Developer.html#adobe-admin-console","title":"Adobe Admin Console","text":"<p>The Adobe Admin Console is used to generate and manage Projects and its own API Keys. It is not as accessible and easy to use as the Microsoft Graph API. An administrate access to the Console is needed for further steps. </p>"},{"location":"Developer/Third%20Party%20APIs/Adobe%20Developer.html#python-library-umapi-clientpy-not-implemented","title":"Python Library umapi-client.py (Not Implemented)","text":""},{"location":"Developer/Third%20Party%20APIs/Microsoft%20GraphAPI.html","title":"Microsoft GraphAPI","text":""},{"location":"Developer/Third%20Party%20APIs/Microsoft%20GraphAPI.html#why-we-need-it","title":"Why we need it","text":"<p>With the Microsoft GraphAPI, Microsoft Users can be authenticated, authorized. It is also used to fill the user database. Using the structure of its roles students, teachers and heads of classes can be distinguished without further identifiers. The Sandbox Tool Graph Explorer all API calls can be tested.</p>"},{"location":"Developer/Third%20Party%20APIs/Microsoft%20GraphAPI.html#graph-explorer","title":"Graph Explorer","text":"<p>Find the Graph Explorer here</p> <p>The Graph Explorer can be used anonymously or with an account. Using a students account of the customer HTL-Villach all calls can be tested before having to implement them in code. </p>"},{"location":"Developer/Third%20Party%20APIs/Microsoft%20GraphAPI.html#authenticating-a-user","title":"Authenticating a user","text":"<p>No page of this website is meant to be accessible to an unauthenticated user. SvelteKit automatically reroutes users to a Microsoft Login page that returns an authentication code. This code is then used in every single API call. </p>"},{"location":"Developer/implementation/Containerization.html","title":"Containerization","text":""},{"location":"Developer/implementation/Containerization.html#docker-secrets","title":"Docker Secrets","text":"<p>To ensure a secure container environment Docker Secrets are used for any data that shouldn\u2019t be transmitted or stored unencrypted. Docker Compose provides a way to use secrets without having to use environment variables to store information. If passwords and API keys are injected as environment variables, there is a risk of unintentional information exposure. Environment variables are often available to all processes, and it can be difficult to track access. They can also be printed in logs when debugging errors. Using secrets mitigates these risks.</p> <p>After docker swarm is initialized, the secrets are added by using following command:</p> <pre><code>Echo \u201c&lt;password&gt;\u201d | sudo docker secret create NAME_OF_SECRET\n</code></pre> <p>After this the \u201cNAME_OF_SECRET\u201d is used in the files replacing hardcoded passwords or API keys.</p>"},{"location":"Developer/implementation/Containerization.html#dockerfile","title":"Dockerfile","text":"<p>Set environment variables to suppress interactive installation</p> <pre><code>ENV DEBIAN_FRONTEND=noninteractive\n</code></pre> <p>Install dependencies</p> <pre><code>RUN apt-get update\nRUN apt-get install -y curl \nRUN apt-get install git \n</code></pre> <p>Install NVM (Node Version Manager)</p> <pre><code>RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash\n</code></pre> <p>Load NVM and install the latest version of Node.js</p> <pre><code>RUN export NVM_DIR=\"$HOME/.nvm\" &amp;&amp; \\\n    [ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\" &amp;&amp; \\\n    nvm install node &amp;&amp; \\\n    nvm alias default node\n</code></pre> <p>Set the working directory inside the container</p> <pre><code>WORKDIR /app\n</code></pre> <p>Copy the package.json and package-lock.json files to the container</p> <pre><code>COPY package*.json ./\n</code></pre> <p>Install dependencies</p> <pre><code>RUN npm install --production\n</code></pre> <p>Copy the rest of the application files to the container</p> <pre><code>COPY . .\n</code></pre> <p>Build SvelteKit app</p> <pre><code>RUN npm run build\n</code></pre> <p>Expose the port that the app is running on</p> <pre><code>EXPOSE 3000\n</code></pre> <p>Command to start the application</p> <pre><code>CMD [\"npm\", \"run\", \"dev\", \"--\", \"--open\"]\n</code></pre>"},{"location":"Developer/implementation/Containerization.html#docker-compose","title":"Docker Compose","text":""},{"location":"Developer/implementation/Containerization.html#traefik","title":"Traefik","text":"<p>The Traefic service has a dependency to the socket_proxy added later. It is configured with persistent volumes. Ports, entry points and some basic configurations are also added.</p>"},{"location":"Developer/implementation/Containerization.html#fastapi","title":"Fastapi","text":"<p>Is assigned to the Traefic network and reachable on port 8085</p>"},{"location":"Developer/implementation/Containerization.html#mongodb","title":"Mongodb","text":"<p>The mongodb database can be reached on port 27017.</p>"},{"location":"Developer/implementation/Containerization.html#socket_proxy","title":"Socket_proxy","text":"<p>It proxies Docker socket requests to support container orchestration tools like Docker Compose, setting environment variables for networking and container information, exposing port 2, and mounting the Docker socket file as read-only inside the container. Finally, it connects the container to a network named \"socket_proxy\" To which Traefic also connects.</p>"},{"location":"Developer/implementation/Containerization.html#influx_db","title":"Influx_db","text":"<p>Runs on port 8086 and also has persistent volumes for storing data.</p>"},{"location":"Developer/implementation/UIX.html","title":"UIX","text":"<p>This solution uses Sveltekit as a meta framework in combination with Svelte. For styling we stick to tailwind CSS and its plugin daisy-UI. We aim to create a responsive and inclusive webportal.</p>"},{"location":"Developer/implementation/UIX.html#views","title":"Views","text":""},{"location":"Developer/implementation/UIX.html#student","title":"Student","text":"<p>Sees their own dashboard with payment requests and available licenses. Can access subpages for completing payment requests and for license requests.</p>"},{"location":"Developer/implementation/UIX.html#head-of-the-class","title":"Head of the class","text":"<p>Has the same functionality as the student view with the addition of being able to create payment requests. This role can be assigned by any teacher.</p> <p>Student and Head of the class share a similar landing page as shown in this mock-up.</p> <p></p>"},{"location":"Developer/implementation/UIX.html#teacher","title":"Teacher","text":"<p>Does not have the same dashboard as students do, instead is greeted by a management page where they can select a class to view and has the option to create payment requests, view already submitted payments and request licenses for a class.</p>"},{"location":"Developer/implementation/UIX.html#accounting","title":"Accounting","text":"<p>The accounting team also has their own view where the simplified page displays all incoming payments. This creates an easily sortable and searchable list view where they have the option to confirm the submitted payments. As displayed on the mock-up, there is also an Events tab which displays submitted payments grouped by their tagged purpose. </p> <p></p>"},{"location":"Developer/implementation/UIX.html#routing","title":"Routing","text":"<p>Sveltekit\u2019s routing is a file-based routing system, where each file in the \u201csrc/routes\u201d directory corresponds to a route in the application. SvelteKit automatically generates the necessary code to handle navigation between these routes, including client-side transitions. It also supports dynamic and nested routing. One of its features are slugs that enable one singe page to act as a template where URL and content are dynamically replaced. </p> <p>The Studently platform uses slugs when accessing individual payment requests.</p> <p></p> <p>For the structure in this file-based routing system a folder represents the route where it\u2019s \u201c+page.svelte\u201d page leads to. For example the \u201csrc/routes/(protected)/licenses/+page.svelte\u201d file will have the URL of just /Licenses.</p>"},{"location":"Developer/implementation/UIX.html#components","title":"Components","text":"<p>Svelte components that are required to be reusable find a home in the \u201csrc/lib\u201d folder. From there they can be easily imported in any file using:</p> <pre><code>Import &lt;alias&gt; from $lib/&lt;name_of_component&gt;\n</code></pre> <p>If a variable from a certain Component needs to be called outside, it must be exported first then defined as a variable in the file the variable is needed and additionally assigned to its Parent Component. This is also the way links operate. </p> <p>For example, when a link is to be added to a navigation component it needs to address it as following:</p> <pre><code>&lt;li&gt;&lt;a href=\"{&lt;onepage&gt;}\"&gt;One Page&lt;/a&gt;&lt;/li&gt;\n</code></pre> <p>Then exported as script:</p> <pre><code>Export let &lt;onepage&gt;:string\n</code></pre> <p>When using it in another file, the parent component must be imported then the value defined:</p> <pre><code>import &lt;alias&gt; from $lib/&lt;name_of_parent&gt;\nconst &lt;onepage&gt;:string = &lt;route&gt;\n</code></pre> <p>When called it needs to be inside parent component:</p> <pre><code>&lt;&lt;name_of_parent&gt; {&lt;onepage&gt;}/&gt;\n</code></pre>"},{"location":"General/Installation%20Guide.html","title":"Installation","text":""},{"location":"General/Installation%20Guide.html#environment","title":"Environment","text":""},{"location":"General/Installation%20Guide.html#backend-env","title":"Backend .env","text":"<pre><code>CLOUD_INSTANCE=\"https://login.microsoftonline.com/\"\nTENANT_ID=\"&lt;TENANT-ID&gt;\"\nCLIENT_ID=\"&lt;CLIENT-ID&gt;\"\nCLIENT_SECRET=\"&lt;CLIENT-SECRET&gt;\"\nREDIRECT_URI=\"http://localhost:5173/callback\"\n</code></pre> <p>All these values are needed for the MS authentication process. These values have to be copied from the Microsoft Portal</p>"},{"location":"General/Installation%20Guide.html#starting-the-webapp","title":"Starting the Webapp","text":""},{"location":"General/Installation%20Guide.html#normal-start-wip","title":"Normal Start (WIP)","text":"<pre><code>docker compose up\n</code></pre>"},{"location":"General/Installation%20Guide.html#verbose-version-not-implemented","title":"Verbose Version (Not Implemented)","text":""},{"location":"General/Installation%20Guide.html#with-additional-statistic-pages-not-implemented","title":"With additional statistic pages (Not Implemented)","text":""}]}